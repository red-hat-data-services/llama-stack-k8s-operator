
# Build the manager binary
FROM registry.redhat.io/ubi9/go-toolset:1.23@sha256:2a88121395084eaa575e5758b903fffb43dbf9d9586b2878e51678f63235b587 as builder
ARG TARGETOS=linux
ARG TARGETARCH
ARG CGO_ENABLED=1


WORKDIR /workspace
# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY main.go main.go
COPY api/ api/
COPY controllers/ controllers/
COPY pkg/ pkg/

# Build the manager binary
USER root

# GOARCH is intentionally left empty to automatically detect the host architecture
# This ensures the binary matches the platform where docker-build is executed
RUN CGO_ENABLED=${CGO_ENABLED} GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -a -o manager main.go

# Use distroless as minimal base image to package the manager binary
# Refer to https://github.com/GoogleContainerTools/distroless for more details
FROM registry.access.redhat.com/ubi9/ubi-minimal@sha256:383329bf9c4f968e87e85d30ba3a5cb988a3bbde28b8e4932dcd3a025fd9c98c
WORKDIR /
COPY --from=builder /workspace/manager .
USER 1001

ENTRYPOINT ["/manager"]

LABEL com.redhat.component="odh-llama-stack-k8s-operator-container" \
      description="kubernetes operator that is responsible for creating and managing llama-stack server" \
      summary="kubernetes operator that is responsible for creating and managing llama-stack server" \
      name="rhoai/odh-llama-stack-k8s-operator-rhel9" \
      maintainer="['managed-open-data-hub@redhat.com']" \
      io.openshift.expose-services="" \
      io.k8s.display-name="odh-llama-stack-k8s-operatorr" \
      io.k8s.description="odh-llama-stack-k8s-operator" \
      com.redhat.license_terms="https://www.redhat.com/licenses/Red_Hat_Standard_EULA_20191108.pdf"